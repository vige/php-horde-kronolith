Description: Adapt to PHPUnit 8.x and 9.x API.
Author: Mike Gabriel <mike.gabriel@das-netzwerkteam.de>

--- a/kronolith-4.2.29/test/Kronolith/Integration/Driver/Base.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Driver/Base.php
@@ -53,14 +53,14 @@
      */
     private $_added = array();
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         self::$setup = new Horde_Test_Setup();
         self::createBasicKronolithSetup(self::$setup);
         parent::setUpBeforeClass();
     }
 
-    public static function tearDownAfterClass()
+    public static function tearDownAfterClass(): void
     {
         self::$driver = null;
         parent::tearDownAfterClass();
@@ -70,7 +70,7 @@
         unset($GLOBALS['session']);
     }
 
-    public function setUp()
+    public function setUp(): void
     {
         $error = self::$setup->getError();
         if (!empty($error)) {
@@ -78,7 +78,7 @@
         }
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
         parent::tearDown();
         foreach ($this->_added as $added) {
--- a/kronolith-4.2.29/test/Kronolith/Integration/Driver/KolabTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Driver/KolabTest.php
@@ -31,7 +31,7 @@
 {
     protected $backupGlobals = false;
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         return;
         parent::setUpBeforeClass();
@@ -41,7 +41,7 @@
         self::$type = 'Kolab';
     }
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->markTestIncomplete('Unserialization error from Kolab share objects.');
     }
--- a/kronolith-4.2.29/test/Kronolith/Integration/Driver/Sql/Base.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Driver/Sql/Base.php
@@ -31,7 +31,7 @@
 {
     static $callback;
 
-    static public function setUpBeforeClass()
+    static public function setUpBeforeClass(): void
     {
         parent::setUpBeforeClass();
         self::getDb();
--- a/kronolith-4.2.29/test/Kronolith/Integration/Driver/Sql/Pdo/SqliteTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Driver/Sql/Pdo/SqliteTest.php
@@ -31,7 +31,7 @@
 {
     protected $backupGlobals = false;
 
-    static public function setUpBeforeClass()
+    static public function setUpBeforeClass(): void
     {
         self::$callback = array(__CLASS__, 'getDb');
         parent::setUpBeforeClass();
--- a/kronolith-4.2.29/test/Kronolith/Integration/FromIcalendarTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/FromIcalendarTest.php
@@ -29,13 +29,13 @@
  */
 class Kronolith_Integration_FromIcalendarTest extends Kronolith_TestCase
 {
-    public function setUp()
+    public function setUp(): void
     {
         $this->_timezone = date_default_timezone_get();
         date_default_timezone_set('Europe/Berlin');
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
         date_default_timezone_set($this->_timezone);
     }
@@ -107,6 +107,8 @@
 
     public function testInvalidTimezone()
     {
+        $this->expectNotToPerformAssertions();
+
         $GLOBALS['conf']['calendar']['driver'] = 'Mock';
         $GLOBALS['injector'] = new Horde_Injector(new Horde_Injector_TopLevel());
         $event = $this->_getFixture('bug11688.ics', 1);
--- a/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/Base.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/Base.php
@@ -43,14 +43,14 @@
      */
     protected $default_name = 'Calendar of test@example.com';
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         self::$setup = new Horde_Test_Setup();
         self::createBasicKronolithSetup(self::$setup);
         parent::setUpBeforeClass();
     }
 
-    public static function tearDownAfterClass()
+    public static function tearDownAfterClass(): void
     {
         parent::tearDownAfterClass();
         unset($GLOBALS['registry']);
@@ -59,7 +59,7 @@
         unset($GLOBALS['session']);
     }
 
-    public function setUp()
+    public function setUp(): void
     {
         $GLOBALS['conf']['autoshare']['shareperms'] = 'none';
         $error = self::$setup->getError();
@@ -68,7 +68,7 @@
         }
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
         foreach ($GLOBALS['injector']->getInstance('Kronolith_Shares')->listShares('test@example.com') as $share) {
             $GLOBALS['injector']->getInstance('Kronolith_Shares')->removeShare($share);
--- a/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/KolabTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/KolabTest.php
@@ -38,7 +38,7 @@
      */
     protected $default_name = 'Calendar';
 
-    public static function setUpBeforeClass()
+    public static function setUpBeforeClass(): void
     {
         return;
         self::$setup = new Horde_Test_Setup();
@@ -46,7 +46,7 @@
         self::createKolabShares(self::$setup);
     }
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->markTestIncomplete("No query of type 'Share' registered!");
     }
--- a/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/Sql/Base.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/Sql/Base.php
@@ -31,7 +31,7 @@
 {
     static $callback;
 
-    static public function setUpBeforeClass()
+    static public function setUpBeforeClass(): void
     {
         parent::setUpBeforeClass();
         self::getDb();
--- a/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/Sql/Pdo/SqliteTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/Kronolith/Sql/Pdo/SqliteTest.php
@@ -31,7 +31,7 @@
 {
     protected $backupGlobals = false;
 
-    static public function setUpBeforeClass()
+    static public function setUpBeforeClass(): void
     {
         self::$callback = array(__CLASS__, 'getDb');
         parent::setUpBeforeClass();
--- a/kronolith-4.2.29/test/Kronolith/Integration/ToIcalendarTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/ToIcalendarTest.php
@@ -29,7 +29,7 @@
  */
 class Kronolith_Integration_ToIcalendarTest extends Kronolith_TestCase
 {
-    public function setUp()
+    public function setUp(): void
     {
         $this->_timezone = date_default_timezone_get();
         date_default_timezone_set('Europe/Berlin');
@@ -43,7 +43,7 @@
         $GLOBALS['conf']['calendar']['driver'] = 'Mock';
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
         unset($GLOBALS['registry']);
         unset($GLOBALS['injector']);
--- a/kronolith-4.2.29/test/Kronolith/TestCase.php
+++ b/kronolith-4.2.29/test/Kronolith/TestCase.php
@@ -28,7 +28,7 @@
  * @license    http://www.horde.org/licenses/gpl GNU General Public License, version 2
  */
 class Kronolith_TestCase
-extends PHPUnit_Framework_TestCase
+extends Horde_Test_Case
 {
     protected function getInjector()
     {
--- /dev/null
+++ b/kronolith-4.2.29/test/Kronolith/phpunit.xml
@@ -0,0 +1 @@
+<phpunit bootstrap="bootstrap.php"></phpunit>
--- a/kronolith-4.2.29/test/Kronolith/Integration/AllDayTest.php
+++ b/kronolith-4.2.29/test/Kronolith/Integration/AllDayTest.php
@@ -29,7 +29,7 @@
  */
 class Kronolith_Integration_AllDayTest extends Kronolith_TestCase
 {
-    static public function setupBeforeClass()
+    static public function setupBeforeClass(): void
     {
         $GLOBALS['calendar_manager'] = new Kronolith_Stub_CalendarManager();
     }
